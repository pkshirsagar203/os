#include <iostream>
#include <cmath>
using namespace std;

void calculatedifference(int request[], int head, int** diff, int n) {
    for (int i = 0; i < n; i++) {
        diff[i][0] = abs(head - request[i]);
    }
}

int findMIN(int** diff, int n) {
    int index = -1;
    int minimum = 1e9;
    for (int i = 0; i < n; i++) {
        if (!diff[i][1] && minimum > diff[i][0]) {
            minimum = diff[i][0];
            index = i;
        }
    }
    return index;
}

void shortestSeekTimeFirst(int request[], int head, int n) {
    if (n == 0)
        return;

    int** diff = new int*[n];
    for (int i = 0; i < n; i++) {
        diff[i] = new int[2];
        diff[i][1] = 0;
    }

    int seekcount = 0;
    int* seeksequence = new int[n + 1];

    for (int i = 0; i < n; i++) {
        seeksequence[i] = head;
        calculatedifference(request, head, diff, n);
        int index = findMIN(diff, n);
        diff[index][1] = 1;
        seekcount += diff[index][0];
        head = request[index];
    }

    seeksequence[n] = head;
    cout << "Total number of seek operations = " << seekcount << endl;
    cout << "Seek sequence is : ";
    for (int i = 0; i <= n; i++) {
        cout << seeksequence[i] << " ";
    }

    for (int i = 0; i < n; i++) {
        delete[] diff[i];
    }
    delete[] diff;
    delete[] seeksequence;
}

int main() {
    int n;
    cout << "Enter the number of requests: ";
    cin >> n;

    int* proc = new int[n];
    cout << "Enter the requests: ";
    for (int i = 0; i < n; i++) {
        cin >> proc[i];
    }

    int head;
    cout << "Enter the head position: ";
    cin >> head;

    shortestSeekTimeFirst(proc, head, n);

    delete[] proc;
    return 0;
}
