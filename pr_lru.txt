#include <iostream>
#include <vector>
#include <algorithm>
#include <unordered_map>
using namespace std;

int main() {
    int n, f;
    cout << "Enter the number of pages: ";
    cin >> n;

    cout << "Enter the page reference string: ";
    vector<int> rs(n);
    for (int i = 0; i < n; i++) {
        cin >> rs[i];
    }

    cout << "Enter the number of frames: ";
    cin >> f;

    int pf = 0, pageHit = 0, next = 1;
    vector<int> m(f), count(f), flag(n);
    unordered_map<int, int> page_hits;

    for (int i = 0; i < f; i++) {
        count[i] = 0;
        m[i] = -1;
    }

    cout << "\nThe Page Replacement process is -- \n";
    for (int i = 0; i < n; i++) {
        page_hits[rs[i]]++;
        for (int j = 0; j < f; j++) {
            if (m[j] == rs[i]) {
                flag[i] = 1;
                count[j] = next;
                next++;
            }
        }
        if (flag[i] == 0) {
            if (i < f) {
                m[i] = rs[i];
                count[i] = next;
                next++;
            } else {
                int min = 0;
                for (int j = 1; j < f; j++) {
                    if (count[min] > count[j])
                        min = j;
                }

                m[min] = rs[i];
                count[min] = next;
                next++;
            }
            pf++;
        } else {
            pageHit++;
        }
        for (int j = 0; j < f; j++)
            cout << m[j] << "\t";
        cout << endl;
    }

    cout << "\nThe number of page faults using LRU are: " << pf << endl;
    cout << "The number of page hits are: " << pageHit << endl;
    return 0;
}
